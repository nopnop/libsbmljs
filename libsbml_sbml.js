var FFI = require('ffi'),
    ArrayType = require('ref-array'),
    Struct = require('ref-struct'),
    StrictType = require('ref-strict'),
    ref = require('ref');
var voidPtr = ref.refType(ref.types.void);
exports.CONSTANTS = {};
var SBMLNamespaces_t = exports.SBMLNamespaces_t = StrictType(voidPtr);
var XMLNamespaces_t = exports.XMLNamespaces_t = StrictType(voidPtr);
var ASTNode_t = exports.ASTNode_t = StrictType(voidPtr);
var SBMLDocument_t = exports.SBMLDocument_t = StrictType(voidPtr);
var Model_t = exports.Model_t = StrictType(voidPtr);
var SBMLError_t = exports.SBMLError_t = StrictType(voidPtr);
var FILE = exports.FILE = StrictType(voidPtr);
var SBMLReader_t = exports.SBMLReader_t = StrictType(voidPtr);
var SBMLWriter_t = exports.SBMLWriter_t = StrictType(voidPtr);
var L3ParserSettings_t = exports.L3ParserSettings_t = StrictType(voidPtr);
var SBMLExtension_t = exports.SBMLExtension_t = StrictType(voidPtr);
var SBasePluginCreatorBase_t = exports.SBasePluginCreatorBase_t = StrictType(voidPtr);
var SBaseExtensionPoint_t = exports.SBaseExtensionPoint_t = StrictType(voidPtr);
var List_t = exports.List_t = StrictType(voidPtr);
var SBMLExtensionNamespaces_t = exports.SBMLExtensionNamespaces_t = StrictType(voidPtr);
var SBMLDocumentPlugin_t = exports.SBMLDocumentPlugin_t = StrictType(voidPtr);
var ExpectedAttributes_t = exports.ExpectedAttributes_t = StrictType(voidPtr);
var XMLAttributes_t = exports.XMLAttributes_t = StrictType(voidPtr);
var XMLOutputStream_t = exports.XMLOutputStream_t = StrictType(voidPtr);
exports.libsbml = new FFI.Library('libsbml', {
    SBMLTypeCode_toString: [ref.types.CString, [ref.types.int32, ref.types.CString]],
    SBMLNamespaces_create: [SBMLNamespaces_t, [ref.types.uint32, ref.types.uint32]],
    SBMLNamespaces_getLevel: [ref.types.uint32, [SBMLNamespaces_t]],
    SBMLNamespaces_getVersion: [ref.types.uint32, [SBMLNamespaces_t]],
    SBMLNamespaces_getNamespaces: [XMLNamespaces_t, [SBMLNamespaces_t]],
    SBMLNamespaces_getSBMLNamespaceURI: [ref.types.CString, [ref.types.uint32, ref.types.uint32]],
    SBMLNamespaces_addNamespaces: [ref.types.int32, [SBMLNamespaces_t, XMLNamespaces_t]],
    SBMLNamespaces_getSupportedNamespaces: [voidPtr, [voidPtr]],
    SBML_formulaToString: [ref.types.CString, [ASTNode_t]],
    SBML_parseFormula: [ASTNode_t, [ref.types.CString]],
    SBMLDocument_create: [SBMLDocument_t, []],
    SBMLDocument_createWithLevelAndVersion: [SBMLDocument_t, [ref.types.uint32, ref.types.uint32]],
    SBMLDocument_createWithSBMLNamespaces: [SBMLDocument_t, [SBMLNamespaces_t]],
    SBMLDocument_free: [ref.types.void, [SBMLDocument_t]],
    SBMLDocument_clone: [SBMLDocument_t, [SBMLDocument_t]],
    SBMLDocument_getLevel: [ref.types.uint32, [SBMLDocument_t]],
    SBMLDocument_getVersion: [ref.types.uint32, [SBMLDocument_t]],
    SBMLDocument_getModel: [Model_t, [SBMLDocument_t]],
    SBMLDocument_expandFunctionDefintions: [ref.types.int32, [SBMLDocument_t]],
    SBMLDocument_expandInitialAssignments: [ref.types.int32, [SBMLDocument_t]],
    SBMLDocument_setLevelAndVersion: [ref.types.int32, [SBMLDocument_t, ref.types.uint32, ref.types.uint32]],
    SBMLDocument_setLevelAndVersionStrict: [ref.types.int32, [SBMLDocument_t, ref.types.uint32, ref.types.uint32]],
    SBMLDocument_setLevelAndVersionNonStrict: [ref.types.int32, [SBMLDocument_t, ref.types.uint32, ref.types.uint32]],
    SBMLDocument_setModel: [ref.types.int32, [SBMLDocument_t, Model_t]],
    SBMLDocument_createModel: [Model_t, [SBMLDocument_t]],
    SBMLDocument_setLocationURI: [ref.types.void, [SBMLDocument_t, ref.types.CString]],
    SBMLDocument_getLocationURI: [ref.types.CString, [SBMLDocument_t]],
    SBMLDocument_setConsistencyChecks: [ref.types.void, [SBMLDocument_t, ref.types.int32, ref.types.int32]],
    SBMLDocument_setConsistencyChecksForConversion: [ref.types.void, [SBMLDocument_t, ref.types.int32, ref.types.int32]],
    SBMLDocument_checkConsistency: [ref.types.uint32, [SBMLDocument_t]],
    SBMLDocument_validateSBML: [ref.types.uint32, [SBMLDocument_t]],
    SBMLDocument_checkInternalConsistency: [ref.types.uint32, [SBMLDocument_t]],
    SBMLDocument_checkL1Compatibility: [ref.types.uint32, [SBMLDocument_t]],
    SBMLDocument_checkL2v1Compatibility: [ref.types.uint32, [SBMLDocument_t]],
    SBMLDocument_checkL2v2Compatibility: [ref.types.uint32, [SBMLDocument_t]],
    SBMLDocument_checkL2v3Compatibility: [ref.types.uint32, [SBMLDocument_t]],
    SBMLDocument_checkL2v4Compatibility: [ref.types.uint32, [SBMLDocument_t]],
    SBMLDocument_getError: [SBMLError_t, [SBMLDocument_t, ref.types.uint32]],
    SBMLDocument_getNumErrors: [ref.types.uint32, [SBMLDocument_t]],
    SBMLDocument_printErrors: [ref.types.void, [SBMLDocument_t, FILE]],
    SBMLDocument_getDefaultLevel: [ref.types.uint32, []],
    SBMLDocument_getDefaultVersion: [ref.types.uint32, []],
    SBMLDocument_getNamespaces: [XMLNamespaces_t, [SBMLDocument_t]],
    SBMLDocument_setSBMLNamespaces: [ref.types.int32, [SBMLDocument_t, SBMLNamespaces_t]],
    SBMLDocument_getPkgRequired: [ref.types.int32, [SBMLDocument_t, ref.types.CString]],
    SBMLDocument_getPackageRequired: [ref.types.int32, [SBMLDocument_t, ref.types.CString]],
    SBMLDocument_setPkgRequired: [ref.types.int32, [SBMLDocument_t, ref.types.CString, ref.types.int32]],
    SBMLDocument_setPackageRequired: [ref.types.int32, [SBMLDocument_t, ref.types.CString, ref.types.int32]],
    SBMLDocument_isSetPkgRequired: [ref.types.int32, [SBMLDocument_t, ref.types.CString]],
    SBMLDocument_isSetPackageRequired: [ref.types.int32, [SBMLDocument_t, ref.types.CString]],
    SBMLReader_create: [SBMLReader_t, []],
    SBMLReader_free: [ref.types.void, [SBMLReader_t]],
    SBMLReader_readSBML: [SBMLDocument_t, [SBMLReader_t, ref.types.CString]],
    SBMLReader_readSBMLFromFile: [SBMLDocument_t, [SBMLReader_t, ref.types.CString]],
    SBMLReader_readSBMLFromString: [SBMLDocument_t, [SBMLReader_t, ref.types.CString]],
    SBMLReader_hasZlib: [ref.types.int32, []],
    SBMLReader_hasBzip2: [ref.types.int32, []],
    SBMLWriter_create: [SBMLWriter_t, []],
    SBMLWriter_free: [ref.types.void, [SBMLWriter_t]],
    SBMLWriter_setProgramName: [ref.types.int32, [SBMLWriter_t, ref.types.CString]],
    SBMLWriter_setProgramVersion: [ref.types.int32, [SBMLWriter_t, ref.types.CString]],
    SBMLWriter_writeSBML: [ref.types.int32, [SBMLWriter_t, SBMLDocument_t, ref.types.CString]],
    SBMLWriter_writeSBMLToFile: [ref.types.int32, [SBMLWriter_t, SBMLDocument_t, ref.types.CString]],
    SBMLWriter_writeSBMLToString: [ref.types.CString, [SBMLWriter_t, SBMLDocument_t]],
    SBMLWriter_hasZlib: [ref.types.int32, []],
    SBMLWriter_hasBzip2: [ref.types.int32, []],
    SBML_parseL3Formula: [ASTNode_t, [ref.types.CString]],
    SBML_parseL3FormulaWithModel: [ASTNode_t, [ref.types.CString, Model_t]],
    SBML_parseL3FormulaWithSettings: [ASTNode_t, [ref.types.CString, L3ParserSettings_t]],
    SBML_getDefaultL3ParserSettings: [L3ParserSettings_t, []],
    SBML_getLastParseL3Error: [ref.types.CString, []],
    SBMLExtension_clone: [SBMLExtension_t, [SBMLExtension_t]],
    SBMLExtension_free: [ref.types.int32, [SBMLExtension_t]],
    SBMLExtension_addSBasePluginCreator: [ref.types.int32, [SBMLExtension_t, SBasePluginCreatorBase_t]],
    SBMLExtension_getSBasePluginCreator: [SBasePluginCreatorBase_t, [SBMLExtension_t, SBaseExtensionPoint_t]],
    SBMLExtension_getSBasePluginCreatorByIndex: [SBasePluginCreatorBase_t, [SBMLExtension_t, ref.types.uint32]],
    SBMLExtension_getNumOfSBasePlugins: [ref.types.int32, [SBMLExtension_t]],
    SBMLExtension_getNumOfSupportedPackageURI: [ref.types.int32, [SBMLExtension_t]],
    SBMLExtension_isSupported: [ref.types.int32, [SBMLExtension_t, ref.types.CString]],
    SBMLExtension_getSupportedPackageURI: [ref.types.CString, [SBMLExtension_t, ref.types.uint32]],
    SBMLExtension_getName: [ref.types.CString, [SBMLExtension_t]],
    SBMLExtension_getURI: [ref.types.CString, [SBMLExtension_t, ref.types.uint32, ref.types.uint32, ref.types.uint32]],
    SBMLExtension_getLevel: [ref.types.uint32, [SBMLExtension_t, ref.types.CString]],
    SBMLExtension_getVersion: [ref.types.uint32, [SBMLExtension_t, ref.types.CString]],
    SBMLExtension_getPackageVersion: [ref.types.uint32, [SBMLExtension_t, ref.types.CString]],
    SBMLExtension_getStringFromTypeCode: [ref.types.CString, [SBMLExtension_t, ref.types.int32]],
    SBMLExtension_getSBMLExtensionNamespaces: [SBMLNamespaces_t, [SBMLExtension_t, ref.types.CString]],
    SBMLExtension_setEnabled: [ref.types.int32, [SBMLExtension_t, ref.types.int32]],
    SBMLExtension_isEnabled: [ref.types.int32, [SBMLExtension_t]],
    SBMLExtensionRegistry_addExtension: [ref.types.int32, [SBMLExtension_t]],
    SBMLExtensionRegistry_getExtension: [SBMLExtension_t, [ref.types.CString]],
    SBMLExtensionRegistry_getSBasePluginCreator: [SBasePluginCreatorBase_t, [SBaseExtensionPoint_t, ref.types.CString]],
    SBMLExtensionRegistry_getSBasePluginCreators: [voidPtr, [SBaseExtensionPoint_t, voidPtr]],
    SBMLExtensionRegistry_getSBasePluginCreatorsByURI: [voidPtr, [ref.types.CString, voidPtr]],
    SBMLExtensionRegistry_isEnabled: [ref.types.int32, [ref.types.CString]],
    SBMLExtensionRegistry_setEnabled: [ref.types.int32, [ref.types.CString, ref.types.int32]],
    SBMLExtensionRegistry_isRegistered: [ref.types.int32, [ref.types.CString]],
    SBMLExtensionRegistry_getNumExtensions: [ref.types.int32, [SBaseExtensionPoint_t]],
    SBMLExtensionRegistry_getRegisteredPackages: [List_t, []],
    SBMLExtensionNamespaces_clone: [SBMLExtensionNamespaces_t, [SBMLExtensionNamespaces_t]],
    SBMLExtensionNamespaces_free: [ref.types.int32, [SBMLExtensionNamespaces_t]],
    SBMLExtensionNamespaces_getURI: [ref.types.CString, [SBMLExtensionNamespaces_t]],
    SBMLExtensionNamespaces_getPackageVersion: [ref.types.uint32, [SBMLExtensionNamespaces_t]],
    SBMLExtensionNamespaces_getPackageName: [ref.types.CString, [SBMLExtensionNamespaces_t]],
    SBMLExtensionNamespaces_setPackageVersion: [ref.types.int32, [SBMLExtensionNamespaces_t, ref.types.uint32]],
    SBMLDocumentPlugin_create: [SBMLDocumentPlugin_t, [ref.types.CString, ref.types.CString, SBMLNamespaces_t]],
    SBMLDocumentPlugin_clone: [SBMLDocumentPlugin_t, [SBMLDocumentPlugin_t]],
    SBMLDocumentPlugin_addExpectedAttributes: [ref.types.int32, [SBMLDocumentPlugin_t, ExpectedAttributes_t]],
    SBMLDocumentPlugin_readAttributes: [ref.types.int32, [SBMLDocumentPlugin_t, XMLAttributes_t, ExpectedAttributes_t]],
    SBMLDocumentPlugin_writeAttributes: [ref.types.int32, [SBMLDocumentPlugin_t, XMLOutputStream_t]],
    SBMLDocumentPlugin_getRequired: [ref.types.int32, [SBMLDocumentPlugin_t]],
    SBMLDocumentPlugin_setRequired: [ref.types.int32, [SBMLDocumentPlugin_t, ref.types.int32]],
    SBMLDocumentPlugin_isSetRequired: [ref.types.int32, [SBMLDocumentPlugin_t]],
    SBMLDocumentPlugin_unsetRequired: [ref.types.int32, [SBMLDocumentPlugin_t]],
});
